name: Build StripperCS2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

env:
  PREMAKE_VERSION: "5.0.0-beta2"
  HL2SDKCS2: ${{ github.workspace }}/hl2sdk
  MMSOURCE112: ${{ github.workspace }}/metamod-source

jobs:
  build:
    runs-on: ubuntu-24.04
        
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    # 下载HL2SDK-CS2
    - name: Download HL2SDK-CS2
      run: |
        git clone --depth=1 --branch=cs2 https://github.com/alliedmodders/hl2sdk.git
      
    - name: Download MetaMod:Source
      run: |
        git clone --depth=1 https://github.com/alliedmodders/metamod-source.git
        
    # Linux依赖
    - name: Download Premake5
      run: |
        wget https://github.com/premake/premake-core/releases/download/v${{ env.PREMAKE_VERSION }}/premake-${{ env.PREMAKE_VERSION }}-linux.tar.gz
        tar xvzf premake-${{ env.PREMAKE_VERSION }}-linux.tar.gz
        chmod +x premake5
        
    - name: Install Dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y gcc-multilib g++-multilib libc6-dev-i386

    # 生成项目文件
    - name: Generate Project Files
      run: |
        ./premake5 gmake2
        
    # 检查可用的构建配置
    - name: Check Available Configurations
      run: |
        echo "Available configurations:"
        make -C build --print-data-base | grep "^config"
        
    # 检查构建目录结构
    - name: Check Build Directory
      run: |
        ls -la build/
        cat build/Makefile
        
    # 构建项目
    - name: Build Project
      run: |
        make -C build config=release_linux64 verbose=1
        
    # 检查输出目录
    - name: Check Output Directory
      run: |
        echo "Checking bin directory:"
        ls -la bin/
        echo "Checking bin/Release directory:"
        ls -la bin/Release/ || true
        
    # 打包构建目录和上级目录
    - name: Archive Directories
      run: |
        # 创建临时目录
        mkdir -p temp_archive
        # 复制构建目录
        cp -r build temp_archive/
        # 复制上级目录（排除一些不必要的目录）
        cp -r * temp_archive/ 2>/dev/null || true
        # 打包
        tar -czf StripperCS2_Build_Full.tar.gz temp_archive/

    # 上传构建产物
    - name: Upload Build Archive
      uses: actions/upload-artifact@v4
      with:
        name: StripperCS2_Build_Full
        path: StripperCS2_Build_Full.tar.gz